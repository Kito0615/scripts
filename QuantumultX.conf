# Quantumult 配置
#
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
# 
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试（测试结果为通过该节点访问此网页的 HTTP 延迟, 即 HTTP 响应时间与 HTTP 请求发起时间的差值），来确认节点的可用性。
#
# 通用配置参数

[general]
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com
server_check_url=http://cp.cloudflare.com/generate_204
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/Orz-3/Orz-3/master/QuantumultX/IP.js
resource_parser_url=https://raw.githubusercontent.com/Kito0615/scripts/master/resource-parser.js
excluded_routes=239.255.255.250/32, 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
fallback_udp_policy=direct

# DNS 设置
[dns]
#no-system
server = 202.141.176.93
server = 202.141.178.13
server = 117.50.10.10
server = 223.5.5.5
server = 114.114.114.114
server = 119.29.29.29:53
server = 119.28.28.28
server = 8.8.8.8

# 分流策略
[policy]
static=全球加速, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
static=苹果服务, direct, 香港节点, 台湾节点, 美国节点, 日本节点, 狮城节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Apple.png
static=港台番剧, direct, 香港节点, 台湾节点, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Bili.png
static=国际媒体, 香港节点, 台湾节点, 日本节点, 美国节点, 狮城节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/YouTube.png
static=黑白名单, 全球加速, direct, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png
url-latency-benchmark=香港节点, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
url-latency-benchmark=台湾节点, server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
url-latency-benchmark=日本节点, server-tag-regex=(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
url-latency-benchmark=狮城节点, server-tag-regex=(?=.*(新|狮|獅|SG|(?i)Singapore))^((?!(港|台|日|韩|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
url-latency-benchmark=美国节点, server-tag-regex=(?=.*(美|US|(?i)States|American))^((?!(港|台|日|韩|新)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png

[server_remote]


[filter_remote]
#引用分流规则
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Unbreak.list, tag=规则修正, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Advertising.list, tag=广告拦截, force-policy=reject, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/Surge/AdRule.list, tag=广告拦截, force-policy=reject, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Hijacking.list, tag=运营劫持, force-policy=reject, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Guard/Privacy.list, tag=隐私保护, force-policy=reject, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Video/TikTok.list, tag=海外抖音, force-policy=全球加速, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/HK.list, tag=流媒体HK, force-policy=香港节点, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/TW.list, tag=流媒体TW, force-policy=台湾节点, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/JP.list, tag=流媒体JP, force-policy=日本节点, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Region/US.list, tag=流媒体US, force-policy=美国节点, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/Streaming.list, tag=国际媒体, force-policy=国际媒体, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, tag=港台番剧, force-policy=港台番剧, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Global.list, tag=全球加速, force-policy=全球加速, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Apple/Apple.list, tag=苹果服务, force-policy=苹果服务, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, tag=国内网站, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true
https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt#type=rule, tag=ChinaIPv4, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true
https://gaoyifan.github.io/china-operator-ip/chinanet6.txt#type=rule, tag=ChinaIPv6, force-policy=direct, update-interval=86400, opt-parser=true, enabled=true

[rewrite_remote]
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJs, update-interval=172800, opt-parser=false, enabled=true
http://limbopro.xyz/Adblock4limbo.conf, tag=毒奶特供, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/YouTubeAds.conf, tag=DivineEngine (Youtube AdsBlock), enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=DivineEngine (Advertising), enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Rewrite_lhie1.conf, tag=NoByDa（lhie1 Rewrite）, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Js.conf, tag=NoByDa（NoByDa Rewrite）, enabled=true
https://raw.githubusercontent.com/GoodHolidays/ConnersHua/master/Quantumult/X/Rewrite.conf, tag=Rewrite (ConnersHua), update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/Kito0615/Scripts/master/QX_Rules/AppOpenAd.conf, tag=去开屏广告,update-interval=172800,opt-parser=false,enabled=true
https://raw.githubusercontent.com/VirgilClyne/iRingo/main/qxrewrite/Weather.qxrewrite, tag=iRingo, update-interval=172800, opt-parser=false, enabled=false
https://raw.githubusercontent.com/app2smile/rules/master/module/bilibili-qx.conf, tag=哔哩哔哩去广告, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/zmqcherish/proxy-script/main/weibo.conf, tag=微博去广告, update-interval=86400, opt-parser=false, enabled=true

[server_local]

[filter_local]
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
geoip, cn, direct
#geoip, cn, direct, force-cellular
final, 默认


#
# The "reject" returns HTTP status code 404 with no content. This type of rewrite has some kind of dynamic delay (0~5 seconds) mechanism of response for repeated requests in a short period of time. The less the repetition, the shorter the delay (0). The more the repetition, the greater the delay (5).
# The "reject-200" returns HTTP status code 200 with no content.
# The "reject-img" returns HTTP status code 200 with content of 1px gif.
# The "reject-dict" returns HTTP status code 200 with content of empty json object.
# The "reject-array" returns HTTP status code 200 with content of empty json array.
# The "request-header" works for all the http headers not just one single header, so you can match two or more headers including CRLF in one regular expression.
# The "echo-response" just reply back the body of the content type response for matched URL, the body file should be saved at "On My iPhone - Quantumult X - Data".
# The length and encoding related HTTP header fields will be automatically processed by Quantumult if the "rewrite" is body related, so you should not handle them by yourself. The max supported original response body size is 4 MB(iOS 13+) for script-response-body.
# The body related rewrite will not be executed if the body is empty.
# When using javascript in rewrite, you can use those objects: $request, $response, $notify(title, subtitle, message), console.log(message) and Quantumult's built-in objects all have prefix "$".
# Supports: $request.sessionIndex, $request.scheme, $request.method, $request.url, $request.path, $request.headers,$response.sessionIndex, $response.statusCode, $response.headers, $response.body
# The $request.sessionIndex is equal to $response.sessionIndex when the response is related to the request. The sessionIndex has nothing to do with the index of TCP records in the orange "Activity" panel.
# The $notify(title, subtitle, message) will post iOS notifications if Quantumult notification has been enabled.
# The $prefs is for persistent store: $prefs.valueForKey(key), $prefs.setValueForKey(value, key), $prefs.removeValueForKey(key), $prefs.removeAllValues().
# The console.log(message)  will output logs to Quantumult log file.
# The setTimeout(function() { }, interval) will run function after interval(ms).
# The scripts for script-request-header, script-request-body, script-response-header, script-response-body, script-echo-response and script-analyze-echo-response should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X
# The difference between script-analyze-echo-response and script-echo-response is that the former will wait for the request body.
#
[rewrite_local]
# 获取京东Cookie. 
^https:\/\/(api\.m|me-api)\.jd\.com\/(client\.action\?functionId=signBean|user_new\/info\/GetJDUserInfoUnion\?) url script-request-header https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js
# 获取钢镚签到body. 
^https:\/\/ms\.jr\.jd\.com\/gw\/generic\/hy\/h5\/m\/appSign\? url script-request-body https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js
# 中国联通Cookie
^https:\/\/m\.client\.10010\.com\/serviceimportantbusiness\/smart\/smartwisdomCommon url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/10010/index.js
# BiliBili签到
# BiliBili获取Cookie
^https:\/\/(www|live)\.bilibili\.com\/?.? url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/bilibili/bilibili.cookie.js
# 京东比价
^https?:\/\/api\.m\.jd\.com\/client\.action\?functionId=(wareBusiness|serverConfig|basicConfig) url script-response-body https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_price.js
#淘宝历史比价 (by yichahucha)
^http://.+/amdc/mobileDispatch url script-request-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
^https?://trade-acs\.m\.taobao\.com/gw/mtop\.taobao\.detail\.getdetail url script-response-body https://raw.githubusercontent.com/yichahucha/surge/master/tb_price.js
#微博Cookie1
https:\/\/api\.weibo\.cn\/\d\/users\/show url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/weibo/weibo.js
#微博Cookie2
https:\/\/api\.weibo\.cn\/2\/logservice\/service url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/weibo/weibo.js
#网易云音乐Cookie
^https\/\/music\.163\.com\/weapi\/user\/level url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/neteasemusic/quanx/neteasemusic.cookie.js
#IT之家Cookie
^https:\/\/my\.ruanmei\.com\/api\/usersign\/getsigninfo? url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/ithome/ithome.cookie.js
#哈罗单车Cookie
^https:\/\/gameapi\.hellobike\.com\/api url script-request-body https://raw.githubusercontent.com/Kito0615/scripts/master/hellobike/hellobike.js
#彩云天气
#^https:\/\/((weather-data\.apple)|(api.weather))\.com url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/caiyun.js
#京东价格保护
^https:\/\/api\.m\.jd\.com\/api\?appid=siteppM&functionId=siteppM_priceskusPull url script-request-body https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_priceProtect.js
# Fa米家Cookie
^https?:\/\/fmapp\.chinafamilymart\.com\.cn\/api\/app\/market\/member\/(signin\/usersign|sign\/current) url script-request-header https://raw.githubusercontent.com/Kito0615/scripts/master/famijia_checkin.js
# 快捷搜索
# gm(Google Image)
^https:\/\/duckduckgo.com\/\?q=gm\+([^&]+).+ url 302 https://www.google.com/search?tbm=isch&q=$1
# gh(GitHub)
^https:\/\/duckduckgo.com\/\?q=gh\+([^&]+).+ url 302 https://github.com/search?q=$1
# sof(StackOverflow)
^https:\/\/duckduckgo.com\/\?q=sof\+([^&]+).+ url 302 https://stackoverflow.com/search?q=$1
# se(StackExchange)
^https:\/\/duckduckgo.com\/\?q=se\+([^&]+).+ url 302 https://stackexchange.com/search?q=$1
# wa(WolframAlpha)
^https:\/\/duckduckgo.com\/\?q=wa\+([^&]+).+ url 302 https://www.wolframa.com/input/?i=$1
# wiki(Wikipedia)
^https:\/\/duckduckgo.com\/\?q=wiki(\+|%20)([^&]+).+ url 302 https://wikipedia.org/wiki/$2
# wk(Wikipedia-CN)
^https:\/\/duckduckgo.com\/\?q=wk(\+|%20)([^&]+).+ url 302 https://zh.wikipedia.org/wiki/$2
# mg(Magi)
^https:\/\/duckduckgo.com\/\?q=mg(\+|%20)([^&]+).+ url 302 https://magi.com/search?q=$2
# tf(Search testflight with Google)
^https:\/\/duckduckgo.com\/\?q=tf(\+|%20)([^&]+).+ url 302 https://www.google.com/search?qs_q=$2&as_sitesearch=testflight.apple.com
# yd(Youdao Dict)
^https:\/\/duckduckgo.com\/\?q=yd\+([^&]+).+ url 302 https://dict.youdao.com/search?q=$1 302
# trc(Translate to Chinese by Google Translate)
^https:\/\/duckduckgo.com\/\?q=trc\+([^&]+).+ url 302 https://translate.google.com/#view=home&op=translate&sl=auto&tl=zh-CN&text=$1
# tre(Translate to English by Google Translate)
^https:\/\/duckduckgo.com\/\?q=tre\+([^&]+).+ url 302 https://translate.google.com/#view=home&op=translate&sl=auto&tl=en&text=$1
# trj(Translate to Japanese by Google Translate)
^https:\/\/duckduckgo.com\/\?q=trj\+([^&]+).+ url 302 https://translate.google.com/#view=home&op=translate&sl=auto&tl=ja&text=$1
# db(douban.com)
^https:\/\/duckduckgo.com\/\?q=db\+([^&]+).+ url 302 https://m.douban.com/search?query=$1
# zh(zhihu.com)
^https:\/\/duckduckgo.com\/\?q=zh\+([^&]+).+ url 302 https://www.zhihu.com/search?type=content&q=$1
# wb(weibo.com)
^https:\/\/duckduckgo.com\/\?q=wb\+([^&]+).+ url 302 https://s.weibo.com/weibo/$1
# wx(weixin.qq.com)
^https:\/\/duckduckgo.com\/\?q=wx\+([^&]+).+ url 302 https://weixin.sogou.com/weixinwap?query=$1
# rd(Reddit)
^https:\/\/duckduckgo.com\/\?q=rd\+([^&]+).+ url 302 https://www.reddit.com/search?q=$1
# tw(Twitter)
^https:\/\/duckduckgo.com\/\?q=tw\+([^&]+).+ url 302 https://twitter.com/search?q=$1
# ssp(sspai.com)
^https:\/\/duckduckgo.com\/\?q=ssp\+([^&]+).+ url 302 https://sspai.com/search/post/$1
# csdn(csdn.net)
^https:\/\/duckduckgo.com\/\?q=csdn\+([^&]+).+ url 302 https://so.csdn.net/so/search/s.do?q=$1&t=&u=
# smzdm(smzdm.com)
^https:\/\/duckduckgo.com\/\?q=smzdm\+([^&]+).+ url 302 https://search.m.smzdm.com/?v=b&s=$1
# amz(amazon.cn)
^https:\/\/duckduckgo.com\/\?q=amz\+([^&]+).+ url 302 https://www.amazon.cn/gp/aw/s/?k=$1
# jd(jd.com)
^https:\/\/duckduckgo.com\/\?q=jd\+([^&]+).+ url 302 https://so.m.jd.com/ware/search.action?keyword=$1
# tb(taobao.com)
^https:\/\/duckduckgo.com\/\?q=tb\+([^&]+).+ url 302 https://s.m.taobao.com/h5?q=$1
# tm(tmall.com)
^https:\/\/duckduckgo.com\/\?q=tm\+([^&]+).+ url 302 https://s.m.tmall.com/m/search.htm?q=$1
# ac(acfun.cn)
^https:\/\/duckduckgo.com\/\?q=ac\+([^&]+).+ url 302 https://www.acfun.cn/search?keyword=$1
# bli(bilibili.com)
^https:\/\/duckduckgo.com\/\?q=bli\+([^&]+).+ url 302 https://m.bilibili.com/search?keyword=$1
# ytb(YouTube)
^https:\/\/duckduckgo.com\/\?q=ytb\+([^&]+).+ url 302 https://www.youtube.com/result?search_query=$1
# bi(bing.com)
^https:\/\/duckduckgo.com\/\?q=bi\+([^&]+).+ url 302 https://cn.bing.com/search?q=$1
# bd(Baidu)
^https:\/\/duckduckgo.com\/\?q=bd\+([^&]+).+ url 302 https://www.baidu.com/s?wd=$1
# ddg(DuckDuckGo)
^https:\/\/duckduckgo.com\/\?q=ddg\+([^&]+).+ url 302 https://duckduckgo.com/?ia=about&q=$1
# [default]gg(Google)
^https:\/\/duckduckgo.com\/\?q=gg\+([^&]+).+ url 302 https://www.google.com/search?q=$1
^https:\/\/duckduckgo.com\/\?q=([^&]+).+ url 302 https://www.google.com/search?q=$1


#^http://example\.com/resource1/1/ url reject
#^http://example\.com/resource1/2/ url reject-img
#^http://example\.com/resource1/3/ url reject-200
#^http://example\.com/resource1/4/ url reject-dict
#^http://example\.com/resource1/5/ url reject-array
#^http://example\.com/resource2/ url 302 http://example.com/new-resource2/
#^http://example\.com/resource3/ url 307 http://example.com/new-resource3/
#^http://example\.com/resource4/ url request-header ^GET /resource4/ HTTP/1\.1(\r\n) request-header GET /api/ HTTP/1.1$1
#^http://example\.com/resource4/ url request-header (\r\n)User-Agent:.+(\r\n) request-header $1User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36$2
#^http://example\.com/resource5/ url request-body "info":\[.+\],"others" request-body "info":[],"others"
#^http://example\.com/resource5/ url response-body "info":\[.+\],"others" response-body "info":[],"others"
#^http://example\.com/resource5/ url echo-response text/html echo-response index.html
#^http://example\.com/resource6/ url script-response-body response-body.js
#^http://example\.com/resource7/ url script-echo-response script-echo.js
#^http://example\.com/resource8/ url script-response-header response-header.js
#^http://example\.com/resource9/ url script-request-header request-header.js
#^http://example\.com/resource10/ url script-request-body request-body.js



#
# The $task.fetch() compose a HTTP request and deal with the response, only text body is supported. A $task.fetch() can be embeded in the completion handler of another $task.fetch(), if you want serial requests not current requests.
# The scripts should be saved in local "On My iPhone - Quantumult X - Scripts" or "iCloud Drive - Quantumult X - Scripts". Samples can be found at https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
# The default HTTP request timeout is 10 seconds.
#
# Supports 5 or 6 fields of cron excluding the command field. The event-network will be triggered when network changed. The event-interaction will be triggered when user tapped a UIAction. The event related task only can be triggered when the Quantumult X Tunnel is running.
#
[task_local]
#* * * * * sample-task.js
#* * * * * sample-task2.js, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png, tag=Sample, enabled=true
#event-network sample-task3.js
#event-interaction sample-task4.js


#
# Deploy a local HTTP server and use JavaScript for data processing.
# The input variables are $reqeust.url, $reqeust.path, $reqeust.headers, $reqeust.body
# The output using $done like $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") to sendback the response.
# Further more you can use a signature or any other validation method to verify if the request is legitimate.
# After the deployment you should visit it through http://127.0.0.1:9999/your-path/your-api/.
#
5 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/JD_DailyBonus.js,tag=京东多合一签到,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
6 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_bean_home.js,tag=京豆额外奖励,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
20 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jx_sign.js,tag=京东京喜签到,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
24 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_fruit.js, tag=京东农场, img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
25 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_jin_tie.js, tag=京东京贴, img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
0 7-21/2 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_plantBean.js,tag=京东种豆,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
16 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_upgrade.js,tag=京东升级领京豆,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
18 0,23 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_lotteryMachine.js,tag=京东摇京豆,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
0 23 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_unsubscribe.js,tag=京东取消关注,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
15 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_priceProtect.js,tag=京东价格保护,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
5 6-18/3 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_fruit.js,tag=东东农场,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
16 0-23/2 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/jd/jd_joy.js,tag=京东宠汪汪,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/jd.png
12 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/weibo/weibo.js,tag=微博签到,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/weibo.png
22 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/neteasemusic/quanx/neteasemusic.js,tag=网易云音乐签到,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/neteasemusic.png, enabled=false
1 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/bilibili/bilibili.js,tag=哔哩哔哩签到,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/bilibili.png
3 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/ithome/ithome.js,tag=IT之家签到,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/ithome.png
4 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/hellobike/hellobike.js,tag=哈罗签到,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/hellbike.png
0 7-21/2 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/caiyun.js,tag=彩云天气,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/caiyun.png
15 0 * * * https://raw.githubusercontent.com/Kito0615/scripts/master/famijia_checkin.js, tag=Fa米家签到, enabled=true,img-url=https://raw.githubusercontent.com/NobyDa/mini/master/Color/Blibee.png
[http_backend]
#https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-backend.js, tag=fileConverter, path=^/example/v1/
#preference.js, tag=userPreference, path=^/preference/v1/, img-url=https://example.com, enabled=true
#convert.js, tag=fileConverter, path=^/convert/v1/


#
# Only the TLS SNI or destination address in "hostname" will be handled by MitM.
#
# By default when MitM enabled for the HTTPS request, Quantumult X fetches the certificate(the certificate will be cached) from the original site, keeps most of the needed original certificate informations and re-signs it using the MitM root CA, this is the recommended(and more compatible) way of creating MitM certificate.
# Occasionally some users like to debug the HTTPS request that its domain does not exist, so the original certificate doesn't even exist. This is when the param simple_cert_hostname comes up. The HTTPS request with TLS SNI names that are in the simple_cert_hostname(and hostname) will using the pure local generated MitM  certificate.
#
# Important !!! You should always keep your CA passphrase and p12 private.
#
[mitm]
hostname = act.10010.cm, m.client.10010.com, *.bilibili.com, my.ruanmei.com, gameapi.hellobike.com, me-api.jd.com, api.m.jd.com, ms.jr.jd.com, www.flyert.com, api.weibo.cn, mapi.weibo.com, *.uve.weibo.com, -*.weibo.com, *.tiktokv.com, *.byteoversea.com, *.tik-tokapi.com, -*snssdk.com, -*amemv.com, sdkapp.uve.weibo.cn, ifac*.iqiyi.com, passport.iqiyi.com, *.m.163.com, app.bilibili.com, *.video.qq.com, *.snssdk.com, music.163.com, gspe1-ssl.ls.apple.com, news-client.apple.com, news-client-search.apple.com, news-edge.apple.com, news-events.apple.com, duckduckgo.com, boxjs.net, boxjs.com, weather-data.apple.com, weather-map.apple.com, mp.weixin.qq.com, api.live.bilibili.com, api.vc.bilibili.com, www.zhihu.com,api.zhihu.com,zhuanlan.zhihu.com,appcloud2.zhihu.com,103.41.167.236,103.41.167.234,103.41.167.235,103.41.167.226